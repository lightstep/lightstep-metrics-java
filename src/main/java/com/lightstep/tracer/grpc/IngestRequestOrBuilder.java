// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

package com.lightstep.tracer.grpc;

public interface IngestRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:lightstep.metrics.IngestRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * IdempotencyKey is a random string that should uniquely identify this report.
   * It should be generated once and used for all retries. The server will use it
   * to de-duplicate requests.
   * </pre>
   *
   * <code>string idempotency_key = 1;</code>
   */
  java.lang.String getIdempotencyKey();
  /**
   * <pre>
   * IdempotencyKey is a random string that should uniquely identify this report.
   * It should be generated once and used for all retries. The server will use it
   * to de-duplicate requests.
   * </pre>
   *
   * <code>string idempotency_key = 1;</code>
   */
  com.google.protobuf.ByteString
      getIdempotencyKeyBytes();

  /**
   * <pre>
   * Reporter contains information to identify the specific originator of this report.
   * </pre>
   *
   * <code>.lightstep.collector.Reporter reporter = 2;</code>
   */
  boolean hasReporter();
  /**
   * <pre>
   * Reporter contains information to identify the specific originator of this report.
   * </pre>
   *
   * <code>.lightstep.collector.Reporter reporter = 2;</code>
   */
  com.lightstep.tracer.grpc.Reporter getReporter();
  /**
   * <pre>
   * Reporter contains information to identify the specific originator of this report.
   * </pre>
   *
   * <code>.lightstep.collector.Reporter reporter = 2;</code>
   */
  com.lightstep.tracer.grpc.ReporterOrBuilder getReporterOrBuilder();

  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  java.util.List<com.lightstep.tracer.grpc.MetricPoint> 
      getPointsList();
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  com.lightstep.tracer.grpc.MetricPoint getPoints(int index);
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  int getPointsCount();
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  java.util.List<? extends com.lightstep.tracer.grpc.MetricPointOrBuilder> 
      getPointsOrBuilderList();
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  com.lightstep.tracer.grpc.MetricPointOrBuilder getPointsOrBuilder(
      int index);
}
