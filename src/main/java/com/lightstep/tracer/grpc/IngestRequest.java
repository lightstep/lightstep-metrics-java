// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

package com.lightstep.tracer.grpc;

/**
 * <pre>
 * IngestRequest is an update to one or more measures.
 * </pre>
 *
 * Protobuf type {@code lightstep.metrics.IngestRequest}
 */
public  final class IngestRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:lightstep.metrics.IngestRequest)
    IngestRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IngestRequest.newBuilder() to construct.
  private IngestRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IngestRequest() {
    idempotencyKey_ = "";
    points_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private IngestRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            idempotencyKey_ = s;
            break;
          }
          case 18: {
            com.lightstep.tracer.grpc.Reporter.Builder subBuilder = null;
            if (reporter_ != null) {
              subBuilder = reporter_.toBuilder();
            }
            reporter_ = input.readMessage(com.lightstep.tracer.grpc.Reporter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(reporter_);
              reporter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              points_ = new java.util.ArrayList<com.lightstep.tracer.grpc.MetricPoint>();
              mutable_bitField0_ |= 0x00000004;
            }
            points_.add(
                input.readMessage(com.lightstep.tracer.grpc.MetricPoint.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        points_ = java.util.Collections.unmodifiableList(points_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.lightstep.tracer.grpc.Metrics.internal_static_lightstep_metrics_IngestRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.lightstep.tracer.grpc.Metrics.internal_static_lightstep_metrics_IngestRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.lightstep.tracer.grpc.IngestRequest.class, com.lightstep.tracer.grpc.IngestRequest.Builder.class);
  }

  private int bitField0_;
  public static final int IDEMPOTENCY_KEY_FIELD_NUMBER = 1;
  private volatile java.lang.Object idempotencyKey_;
  /**
   * <pre>
   * IdempotencyKey is a random string that should uniquely identify this report.
   * It should be generated once and used for all retries. The server will use it
   * to de-duplicate requests.
   * </pre>
   *
   * <code>string idempotency_key = 1;</code>
   */
  public java.lang.String getIdempotencyKey() {
    java.lang.Object ref = idempotencyKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      idempotencyKey_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * IdempotencyKey is a random string that should uniquely identify this report.
   * It should be generated once and used for all retries. The server will use it
   * to de-duplicate requests.
   * </pre>
   *
   * <code>string idempotency_key = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIdempotencyKeyBytes() {
    java.lang.Object ref = idempotencyKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      idempotencyKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPORTER_FIELD_NUMBER = 2;
  private com.lightstep.tracer.grpc.Reporter reporter_;
  /**
   * <pre>
   * Reporter contains information to identify the specific originator of this report.
   * </pre>
   *
   * <code>.lightstep.collector.Reporter reporter = 2;</code>
   */
  public boolean hasReporter() {
    return reporter_ != null;
  }
  /**
   * <pre>
   * Reporter contains information to identify the specific originator of this report.
   * </pre>
   *
   * <code>.lightstep.collector.Reporter reporter = 2;</code>
   */
  public com.lightstep.tracer.grpc.Reporter getReporter() {
    return reporter_ == null ? com.lightstep.tracer.grpc.Reporter.getDefaultInstance() : reporter_;
  }
  /**
   * <pre>
   * Reporter contains information to identify the specific originator of this report.
   * </pre>
   *
   * <code>.lightstep.collector.Reporter reporter = 2;</code>
   */
  public com.lightstep.tracer.grpc.ReporterOrBuilder getReporterOrBuilder() {
    return getReporter();
  }

  public static final int POINTS_FIELD_NUMBER = 3;
  private java.util.List<com.lightstep.tracer.grpc.MetricPoint> points_;
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  public java.util.List<com.lightstep.tracer.grpc.MetricPoint> getPointsList() {
    return points_;
  }
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  public java.util.List<? extends com.lightstep.tracer.grpc.MetricPointOrBuilder> 
      getPointsOrBuilderList() {
    return points_;
  }
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  public int getPointsCount() {
    return points_.size();
  }
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  public com.lightstep.tracer.grpc.MetricPoint getPoints(int index) {
    return points_.get(index);
  }
  /**
   * <pre>
   * Points contain the individual updates.
   * </pre>
   *
   * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
   */
  public com.lightstep.tracer.grpc.MetricPointOrBuilder getPointsOrBuilder(
      int index) {
    return points_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getIdempotencyKeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, idempotencyKey_);
    }
    if (reporter_ != null) {
      output.writeMessage(2, getReporter());
    }
    for (int i = 0; i < points_.size(); i++) {
      output.writeMessage(3, points_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIdempotencyKeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, idempotencyKey_);
    }
    if (reporter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getReporter());
    }
    for (int i = 0; i < points_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, points_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.lightstep.tracer.grpc.IngestRequest)) {
      return super.equals(obj);
    }
    com.lightstep.tracer.grpc.IngestRequest other = (com.lightstep.tracer.grpc.IngestRequest) obj;

    if (!getIdempotencyKey()
        .equals(other.getIdempotencyKey())) return false;
    if (hasReporter() != other.hasReporter()) return false;
    if (hasReporter()) {
      if (!getReporter()
          .equals(other.getReporter())) return false;
    }
    if (!getPointsList()
        .equals(other.getPointsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + IDEMPOTENCY_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getIdempotencyKey().hashCode();
    if (hasReporter()) {
      hash = (37 * hash) + REPORTER_FIELD_NUMBER;
      hash = (53 * hash) + getReporter().hashCode();
    }
    if (getPointsCount() > 0) {
      hash = (37 * hash) + POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getPointsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.lightstep.tracer.grpc.IngestRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.lightstep.tracer.grpc.IngestRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * IngestRequest is an update to one or more measures.
   * </pre>
   *
   * Protobuf type {@code lightstep.metrics.IngestRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:lightstep.metrics.IngestRequest)
      com.lightstep.tracer.grpc.IngestRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lightstep.tracer.grpc.Metrics.internal_static_lightstep_metrics_IngestRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lightstep.tracer.grpc.Metrics.internal_static_lightstep_metrics_IngestRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lightstep.tracer.grpc.IngestRequest.class, com.lightstep.tracer.grpc.IngestRequest.Builder.class);
    }

    // Construct using com.lightstep.tracer.grpc.IngestRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPointsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      idempotencyKey_ = "";

      if (reporterBuilder_ == null) {
        reporter_ = null;
      } else {
        reporter_ = null;
        reporterBuilder_ = null;
      }
      if (pointsBuilder_ == null) {
        points_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        pointsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.lightstep.tracer.grpc.Metrics.internal_static_lightstep_metrics_IngestRequest_descriptor;
    }

    @java.lang.Override
    public com.lightstep.tracer.grpc.IngestRequest getDefaultInstanceForType() {
      return com.lightstep.tracer.grpc.IngestRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.lightstep.tracer.grpc.IngestRequest build() {
      com.lightstep.tracer.grpc.IngestRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.lightstep.tracer.grpc.IngestRequest buildPartial() {
      com.lightstep.tracer.grpc.IngestRequest result = new com.lightstep.tracer.grpc.IngestRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.idempotencyKey_ = idempotencyKey_;
      if (reporterBuilder_ == null) {
        result.reporter_ = reporter_;
      } else {
        result.reporter_ = reporterBuilder_.build();
      }
      if (pointsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          points_ = java.util.Collections.unmodifiableList(points_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.points_ = points_;
      } else {
        result.points_ = pointsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.lightstep.tracer.grpc.IngestRequest) {
        return mergeFrom((com.lightstep.tracer.grpc.IngestRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.lightstep.tracer.grpc.IngestRequest other) {
      if (other == com.lightstep.tracer.grpc.IngestRequest.getDefaultInstance()) return this;
      if (!other.getIdempotencyKey().isEmpty()) {
        idempotencyKey_ = other.idempotencyKey_;
        onChanged();
      }
      if (other.hasReporter()) {
        mergeReporter(other.getReporter());
      }
      if (pointsBuilder_ == null) {
        if (!other.points_.isEmpty()) {
          if (points_.isEmpty()) {
            points_ = other.points_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePointsIsMutable();
            points_.addAll(other.points_);
          }
          onChanged();
        }
      } else {
        if (!other.points_.isEmpty()) {
          if (pointsBuilder_.isEmpty()) {
            pointsBuilder_.dispose();
            pointsBuilder_ = null;
            points_ = other.points_;
            bitField0_ = (bitField0_ & ~0x00000004);
            pointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPointsFieldBuilder() : null;
          } else {
            pointsBuilder_.addAllMessages(other.points_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.lightstep.tracer.grpc.IngestRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.lightstep.tracer.grpc.IngestRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object idempotencyKey_ = "";
    /**
     * <pre>
     * IdempotencyKey is a random string that should uniquely identify this report.
     * It should be generated once and used for all retries. The server will use it
     * to de-duplicate requests.
     * </pre>
     *
     * <code>string idempotency_key = 1;</code>
     */
    public java.lang.String getIdempotencyKey() {
      java.lang.Object ref = idempotencyKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        idempotencyKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * IdempotencyKey is a random string that should uniquely identify this report.
     * It should be generated once and used for all retries. The server will use it
     * to de-duplicate requests.
     * </pre>
     *
     * <code>string idempotency_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdempotencyKeyBytes() {
      java.lang.Object ref = idempotencyKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        idempotencyKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * IdempotencyKey is a random string that should uniquely identify this report.
     * It should be generated once and used for all retries. The server will use it
     * to de-duplicate requests.
     * </pre>
     *
     * <code>string idempotency_key = 1;</code>
     */
    public Builder setIdempotencyKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      idempotencyKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IdempotencyKey is a random string that should uniquely identify this report.
     * It should be generated once and used for all retries. The server will use it
     * to de-duplicate requests.
     * </pre>
     *
     * <code>string idempotency_key = 1;</code>
     */
    public Builder clearIdempotencyKey() {
      
      idempotencyKey_ = getDefaultInstance().getIdempotencyKey();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IdempotencyKey is a random string that should uniquely identify this report.
     * It should be generated once and used for all retries. The server will use it
     * to de-duplicate requests.
     * </pre>
     *
     * <code>string idempotency_key = 1;</code>
     */
    public Builder setIdempotencyKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      idempotencyKey_ = value;
      onChanged();
      return this;
    }

    private com.lightstep.tracer.grpc.Reporter reporter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.lightstep.tracer.grpc.Reporter, com.lightstep.tracer.grpc.Reporter.Builder, com.lightstep.tracer.grpc.ReporterOrBuilder> reporterBuilder_;
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public boolean hasReporter() {
      return reporterBuilder_ != null || reporter_ != null;
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public com.lightstep.tracer.grpc.Reporter getReporter() {
      if (reporterBuilder_ == null) {
        return reporter_ == null ? com.lightstep.tracer.grpc.Reporter.getDefaultInstance() : reporter_;
      } else {
        return reporterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public Builder setReporter(com.lightstep.tracer.grpc.Reporter value) {
      if (reporterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reporter_ = value;
        onChanged();
      } else {
        reporterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public Builder setReporter(
        com.lightstep.tracer.grpc.Reporter.Builder builderForValue) {
      if (reporterBuilder_ == null) {
        reporter_ = builderForValue.build();
        onChanged();
      } else {
        reporterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public Builder mergeReporter(com.lightstep.tracer.grpc.Reporter value) {
      if (reporterBuilder_ == null) {
        if (reporter_ != null) {
          reporter_ =
            com.lightstep.tracer.grpc.Reporter.newBuilder(reporter_).mergeFrom(value).buildPartial();
        } else {
          reporter_ = value;
        }
        onChanged();
      } else {
        reporterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public Builder clearReporter() {
      if (reporterBuilder_ == null) {
        reporter_ = null;
        onChanged();
      } else {
        reporter_ = null;
        reporterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public com.lightstep.tracer.grpc.Reporter.Builder getReporterBuilder() {
      
      onChanged();
      return getReporterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    public com.lightstep.tracer.grpc.ReporterOrBuilder getReporterOrBuilder() {
      if (reporterBuilder_ != null) {
        return reporterBuilder_.getMessageOrBuilder();
      } else {
        return reporter_ == null ?
            com.lightstep.tracer.grpc.Reporter.getDefaultInstance() : reporter_;
      }
    }
    /**
     * <pre>
     * Reporter contains information to identify the specific originator of this report.
     * </pre>
     *
     * <code>.lightstep.collector.Reporter reporter = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.lightstep.tracer.grpc.Reporter, com.lightstep.tracer.grpc.Reporter.Builder, com.lightstep.tracer.grpc.ReporterOrBuilder> 
        getReporterFieldBuilder() {
      if (reporterBuilder_ == null) {
        reporterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.lightstep.tracer.grpc.Reporter, com.lightstep.tracer.grpc.Reporter.Builder, com.lightstep.tracer.grpc.ReporterOrBuilder>(
                getReporter(),
                getParentForChildren(),
                isClean());
        reporter_ = null;
      }
      return reporterBuilder_;
    }

    private java.util.List<com.lightstep.tracer.grpc.MetricPoint> points_ =
      java.util.Collections.emptyList();
    private void ensurePointsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        points_ = new java.util.ArrayList<com.lightstep.tracer.grpc.MetricPoint>(points_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.lightstep.tracer.grpc.MetricPoint, com.lightstep.tracer.grpc.MetricPoint.Builder, com.lightstep.tracer.grpc.MetricPointOrBuilder> pointsBuilder_;

    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public java.util.List<com.lightstep.tracer.grpc.MetricPoint> getPointsList() {
      if (pointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(points_);
      } else {
        return pointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public int getPointsCount() {
      if (pointsBuilder_ == null) {
        return points_.size();
      } else {
        return pointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public com.lightstep.tracer.grpc.MetricPoint getPoints(int index) {
      if (pointsBuilder_ == null) {
        return points_.get(index);
      } else {
        return pointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder setPoints(
        int index, com.lightstep.tracer.grpc.MetricPoint value) {
      if (pointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePointsIsMutable();
        points_.set(index, value);
        onChanged();
      } else {
        pointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder setPoints(
        int index, com.lightstep.tracer.grpc.MetricPoint.Builder builderForValue) {
      if (pointsBuilder_ == null) {
        ensurePointsIsMutable();
        points_.set(index, builderForValue.build());
        onChanged();
      } else {
        pointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder addPoints(com.lightstep.tracer.grpc.MetricPoint value) {
      if (pointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePointsIsMutable();
        points_.add(value);
        onChanged();
      } else {
        pointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder addPoints(
        int index, com.lightstep.tracer.grpc.MetricPoint value) {
      if (pointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePointsIsMutable();
        points_.add(index, value);
        onChanged();
      } else {
        pointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder addPoints(
        com.lightstep.tracer.grpc.MetricPoint.Builder builderForValue) {
      if (pointsBuilder_ == null) {
        ensurePointsIsMutable();
        points_.add(builderForValue.build());
        onChanged();
      } else {
        pointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder addPoints(
        int index, com.lightstep.tracer.grpc.MetricPoint.Builder builderForValue) {
      if (pointsBuilder_ == null) {
        ensurePointsIsMutable();
        points_.add(index, builderForValue.build());
        onChanged();
      } else {
        pointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder addAllPoints(
        java.lang.Iterable<? extends com.lightstep.tracer.grpc.MetricPoint> values) {
      if (pointsBuilder_ == null) {
        ensurePointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, points_);
        onChanged();
      } else {
        pointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder clearPoints() {
      if (pointsBuilder_ == null) {
        points_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        pointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public Builder removePoints(int index) {
      if (pointsBuilder_ == null) {
        ensurePointsIsMutable();
        points_.remove(index);
        onChanged();
      } else {
        pointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public com.lightstep.tracer.grpc.MetricPoint.Builder getPointsBuilder(
        int index) {
      return getPointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public com.lightstep.tracer.grpc.MetricPointOrBuilder getPointsOrBuilder(
        int index) {
      if (pointsBuilder_ == null) {
        return points_.get(index);  } else {
        return pointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public java.util.List<? extends com.lightstep.tracer.grpc.MetricPointOrBuilder> 
         getPointsOrBuilderList() {
      if (pointsBuilder_ != null) {
        return pointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(points_);
      }
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public com.lightstep.tracer.grpc.MetricPoint.Builder addPointsBuilder() {
      return getPointsFieldBuilder().addBuilder(
          com.lightstep.tracer.grpc.MetricPoint.getDefaultInstance());
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public com.lightstep.tracer.grpc.MetricPoint.Builder addPointsBuilder(
        int index) {
      return getPointsFieldBuilder().addBuilder(
          index, com.lightstep.tracer.grpc.MetricPoint.getDefaultInstance());
    }
    /**
     * <pre>
     * Points contain the individual updates.
     * </pre>
     *
     * <code>repeated .lightstep.metrics.MetricPoint points = 3;</code>
     */
    public java.util.List<com.lightstep.tracer.grpc.MetricPoint.Builder> 
         getPointsBuilderList() {
      return getPointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.lightstep.tracer.grpc.MetricPoint, com.lightstep.tracer.grpc.MetricPoint.Builder, com.lightstep.tracer.grpc.MetricPointOrBuilder> 
        getPointsFieldBuilder() {
      if (pointsBuilder_ == null) {
        pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.lightstep.tracer.grpc.MetricPoint, com.lightstep.tracer.grpc.MetricPoint.Builder, com.lightstep.tracer.grpc.MetricPointOrBuilder>(
                points_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        points_ = null;
      }
      return pointsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:lightstep.metrics.IngestRequest)
  }

  // @@protoc_insertion_point(class_scope:lightstep.metrics.IngestRequest)
  private static final com.lightstep.tracer.grpc.IngestRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.lightstep.tracer.grpc.IngestRequest();
  }

  public static com.lightstep.tracer.grpc.IngestRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IngestRequest>
      PARSER = new com.google.protobuf.AbstractParser<IngestRequest>() {
    @java.lang.Override
    public IngestRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new IngestRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<IngestRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IngestRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.lightstep.tracer.grpc.IngestRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

